{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["UserInfo","_ref","user","name","email","_jsx","className","href","concat","children","TodoInfo","todo","completed","title","_Fragment","_jsxs","ClassNames","TodoList","todos","style","listStyleType","map","id","todosFromServer","_objectSpread","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"wPAOaA,EAA4B,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAClCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACEC,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYJ,GAAQK,SAAEN,GAEtD,ECJaO,EAA4B,SAAHT,GAAkB,IAAZU,EAAIV,EAAJU,KAClCC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,MAAOX,EAASS,EAATT,KAE1B,OACEG,cAAAS,WAAA,CAAAL,SACEM,eAAA,WAAST,UAAWU,IAClB,WACA,CACE,sBAAuBJ,IAEzBH,SAAA,CAEAJ,cAAA,MAAIC,UAAU,kBAAiBG,SAAEI,IAChCX,GAAQG,cAACL,EAAQ,CAACE,KAAMA,QAIjC,EClBae,EAA4B,SAAHhB,GAAA,IAAMiB,EAAKjB,EAALiB,MAAK,OAC/Cb,cAAA,WAASC,UAAU,WAAUG,SAC3BJ,cAAA,MAAAI,SACEJ,cAAA,MAAIc,MAAO,CAAEC,cAAe,QAASX,SAClCS,EAAMG,KAAI,SAAAV,GAAI,OAAKN,cAACK,EAAQ,CAAeC,KAAMA,GAAfA,EAAKW,GAAkB,SAGtD,ECCL,IAAMJ,EAAgBK,EAAgBF,KAAI,SAACV,GAAI,OAAAa,wBAAA,GACjDb,GAAI,IACPT,MAReuB,EAQDd,EAAKc,OAPDC,EAAgBC,MAAK,SAACzB,GAAI,OAAKA,EAAKoB,KAAOG,CAAM,KAE/C,QAHtB,IAAiBA,CAQW,IAGfG,EAAgB,WAAH,OACxBb,eAAA,OAAKT,UAAU,MAAKG,SAAA,CAClBJ,cAAA,MAAIC,UAAU,aAAYG,SAAC,yBAC3BJ,cAACY,EAAQ,CAACC,MAAOA,MACb,ECtBRW,IAASC,OAAOzB,cAACuB,EAAG,IAAKG,SAASC,eAAe,Q","file":"static/js/main.b5e8363a.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>{name}</a>\n  );\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo ;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { completed, title, user } = todo;\n\n  return (\n    <>\n      <article className={ClassNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n      >\n        <h2 className=\"TodoInfo__title\">{title}</h2>\n        {user && <UserInfo user={user} />}\n      </article>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo [];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    <ul>\n      <li style={{ listStyleType: 'none' }}>\n        {todos.map(todo => (<TodoInfo key={todo.id} todo={todo} />))}\n      </li>\n    </ul>\n  </section>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos.json';\nimport usersFromServer from './api/users.json';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">Static list of todos</h1>\n    <TodoList todos={todos} />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}